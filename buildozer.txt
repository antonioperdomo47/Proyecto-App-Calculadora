[app]

# (str) Título de tu aplicación
title = Cuanto Vale?

# (str) Nombre del paquete
package.name = cuantovale

# (str) Dominio del paquete (necesario para el empaquetado de Android/iOS)
package.domain = org.test

# (str) Directorio fuente donde se encuentra main.py
source.dir = .

# (list) Archivos fuente para incluir (dejar vacío para incluir todos los archivos)
source.include_exts = py,png,jpg,kv,atlas

# (list) Patrones de inclusión de archivos
# source.include_patterns = assets/*,images/*.png

# (list) Archivos fuente para excluir (dejar vacío para no excluir nada)
# source.exclude_exts = spec

# (list) Directorios para excluir (dejar vacío para no excluir nada)
# source.exclude_dirs = tests, bin, venv

# (list) Patrones de exclusión de archivos
# No se debe agregar './' al principio
# source.exclude_patterns = license,images/*/*.jpg

# (str) Versión de la aplicación (método 1)
version = 0.1

# (list) Requisitos de la aplicación
# separados por comas, por ejemplo: requirements = sqlite3,kivy
requirements = python3,kivy

# (str) Carpeta de origen personalizada para los requisitos
# Establece una carpeta de origen personalizada para los requisitos con recetas
# requirements.source.kivy = ../../kivy

# (str) Icono de la aplicación
icon.filename = %(source.dir)s/logo.png

# (list) Orientaciones soportadas
# Opciones válidas: landscape, portrait, portrait-reverse o landscape-reverse
orientation = portrait

# (str) Versión de Kivy a utilizar
osx.kivy_version = 2.0.0

#
# Específico de Android
#

# (bool) Indica si la aplicación debe ser de pantalla completa o no
fullscreen = 0

# (list) Permisos
android.permissions = INTERNET, WRITE_EXTERNAL_STORAGE

# (int) API de destino de Android, debería ser lo más alta posible
android.api = 31

# (int) API mínima que admitirá tu APK / AAB
android.minapi = 21

# (list) Archivos o directorios para copiar en el directorio de activos del APK
# Puede ser una ruta de archivo o directorio. Ejemplos:
# 1) android.add_assets = source_asset_relative_path
# 2) android.add_assets = source_asset_path:destination_asset_relative_path
# android.add_assets =

# (list) Librerías adicionales de Java para copiar en libs/armeabi
# android.add_libs_armeabi = libs/android/*.so
# android.add_libs_armeabi_v7a = libs/android-v7/*.so
# android.add_libs_arm64_v8a = libs/android-v8/*.so
# android.add_libs_x86 = libs/android-x86/*.so
# android.add_libs_mips = libs/android-mips/*.so

# (list) Actividades Java para agregar al manifiesto
# android.add_activities = com.example.ExampleActivity

# (str) La orientación por defecto de la actividad principal.
# Opciones válidas: 'landscape', 'portrait', 'sensor', 'user', 'behind', 'reverseLandscape', 'reversePortrait', 'sensorLandscape', 'sensorPortrait', 'fullSensor', 'userLandscape', 'userPortrait', 'locked'
# android.orientation = landscape

# (list) Metaetiquetas adicionales que se agregarán al manifiesto de Android.
# android.meta_data =

# (list) Proveedores de contenido adicionales que se agregarán al manifiesto de Android.
# android.add_providers =

# (list) Servicios adicionales que se agregarán al manifiesto de Android
# android.add_services =

# (str) Nombrar un servicio existente excluirá a ese servicio
# android.exclude_services = com.android.example.ExcludedService

# (bool) Indica si las bibliotecas deberían ser comprimidas en un solo archivo lib.so
android.uni_lib = False

# (str) Firma de aplicaciones personalizada (almacenada en keystore)
# No se debe agregar './' al principio
# android.sign.keystore = mykeystore.keystore

# (str) Alias de clave para la firma de aplicaciones personalizada
android.sign.alias = mykey

# (str) Contraseña para la clave de la firma de aplicaciones personalizada (si se establece el alias de clave)
# android.sign.keystore_pass = mypass

# (str) Contraseña para la clave de la firma de aplicaciones personalizada (si se establece el alias de clave)
android.sign.keypass = mypass

# (str) Archivo ZIP o directorio de plantillas de activos adicionales para incluir en el APK
# Puede ser un archivo zip o un directorio. Ejemplo:
# python.activity.template_dir = source_relative_path
# python.activity.template_dir = source_dir:destination_relative_path
# android.additional_asset_dirs =

# (str) Archivo ZIP o directorio de plantillas de JNI adicionales para incluir en el APK
# Puede ser un archivo zip o un directorio. Ejemplo:
# python.jni.template_dir = source_relative_path
# python.jni.template_dir = source_dir:destination_relative_path
# android.additional_jni_dirs =

# (bool) si es True, se utiliza el empaquetado de Gradle para Android
# Custom source folders for the buildozer should be rooted in the same location as the buildozer.spec file
# android.gradle_build_ext = True
